name: "Destruction Infrastructure"
on:
  issues:
    types: [closed]
jobs:
  destruction:
    runs-on: ubuntu-latest
    steps:
      - name: ⚙️ Configure GitHub Actions
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: ⚙️ Configure Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: ✍️ Branch name
        uses: actions/github-script@v6
        id: branch
        env:
          ISSUE: ${{ toJson(github.event.issue) }}
        with:
          script: |
            const issue = JSON.parse(process.env.ISSUE);
            const kebabCase = string => string.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\s+/g, '-').toLowerCase()
            const feature = kebabCase(issue.title)
            const label = issue.labels.find(({name}) => name === 'feat' || name === 'refactor' || name === 'fix')
            
            console.log({
              branch: `${label.name}/issue-${issue.number}/${feature}`,
              feature
            })
            
            return {
              branch: `${label.name}/issue-${issue.number}/${feature}`,
              feature
            }

      - name: 🛠 Initialize Terraform
        working-directory: ./aws/feature
        run: terraform init

      - name: ♻️ Workspace
        working-directory: ./aws/feature
        run: terraform workspace select ${{ fromJSON(steps.branch.outputs.result).feature }}

      - name: 🏗 Destruction Infrastructure
        id: terraform_apply
        working-directory: ./aws/feature
        run: |
          terraform destroy -auto-approve

      - name: ♻️ Workspace
        working-directory: ./aws/feature
        run: terraform workspace select default

      - name: ♻️ Workspace
        working-directory: ./aws/feature
        run: terraform workspace delete ${{ fromJSON(steps.branch.outputs.result).feature }}