name: "Destruction Infrastructure"

on:
  issues:
    types: [ closed ]

jobs:
  reference:
    runs-on: ubuntu-latest

    env:
      ISSUE: ${{ toJSON(github.event.issue) }}

    outputs:
      workspace: ${{ steps.feature.outputs.result }}
      branch: ${{ steps.branch.outputs.result }}

    steps:
      - name: ✍️ Name of workspace
        uses: actions/github-script@v6
        id: feature
        env:
          ISSUE: ${{ env.ISSUE }}
        with:
          result-encoding: string
          script: |
            const kebabCase = string => string.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\s+/g, '-').toLowerCase()
            return kebabCase(JSON.parse(process.env.ISSUE).title)

      - name: ✍️ Name of branch
        uses: actions/github-script@v6
        id: branch
        env:
          ISSUE: ${{ env.ISSUE }}
          FEATURE: ${{ steps.feature.outputs.result }}
        with:
          result-encoding: string
          script: |
            const issue = JSON.parse(process.env.ISSUE)
            const label = issue.labels.find(({name}) => name === 'feat' || name === 'refactor' || name === 'fix')
            return `${label.name}/issue-${issue.number}/${process.env.FEATURE}`

      - run: echo ${{ steps.feature.outputs.result }} ${{ steps.branch.outputs.result }}

  terraform:
    runs-on: ubuntu-latest
    needs: [ reference ]
    environment: Amplify
    defaults:
      run:
        working-directory: aws/feature

    steps:
      - name: ⚙️ Configure GitHub Actions
        uses: actions/checkout@v3

      - name: ⚙️ Configure Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: 🚧 Defining environment context
        run: |
          mkdir .terraform
          cd .terraform
          echo ${{ needs.reference.outputs.workspace }} >> environment

      - name: 🛠 Terraform operations
        working-directory: ./aws/feature
        run: |
          terraform init
          terraform destroy -auto-approve \
            -var="env_branch=${{ needs.reference.outputs.branch }}" \
            -var="env_feature=${{ needs.reference.outputs.workspace }}" \
            -var="app_id=${{ secrets.APP_ID }}"
          terraform workspace select development
          terraform workspace delete ${{ needs.reference.outputs.workspace }}
